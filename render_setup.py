#!/usr/bin/env python
"""
Script de configuration pour Render.com
Configure automatiquement les chemins et permissions pour l'environnement Render
"""

import os
import sys
import shutil

def setup_render_environment():
    """Configure l'environnement pour Render"""
    print("üöÄ Configuration de l'environnement Render...")
    
    # Cr√©er les r√©pertoires n√©cessaires
    directories = [
        "/home/render/project/data",
        "/home/render/project/data/attachments",
        "/home/render/project/data/backups",
        "/home/render/project/data/backup_json"
    ]
    
    for directory in directories:
        if not os.path.exists(directory):
            os.makedirs(directory, exist_ok=True)
            print(f"‚úÖ R√©pertoire cr√©√©: {directory}")
        else:
            print(f"‚ÑπÔ∏è R√©pertoire existant: {directory}")
    
    # V√©rifier si la base de donn√©es existe dans le r√©pertoire source
    source_db = "erp_production_dg.db"
    target_db = "/home/render/project/data/erp_production_dg.db"
    
    if os.path.exists(source_db) and not os.path.exists(target_db):
        print(f"üì¶ Copie de la base de donn√©es vers {target_db}")
        shutil.copy2(source_db, target_db)
        print("‚úÖ Base de donn√©es copi√©e avec succ√®s")
    elif os.path.exists(target_db):
        print(f"‚ÑπÔ∏è Base de donn√©es d√©j√† pr√©sente: {target_db}")
    else:
        print("‚ö†Ô∏è Base de donn√©es source non trouv√©e, elle sera cr√©√©e automatiquement")
    
    # D√©finir les permissions appropri√©es
    try:
        os.chmod("/home/render/project/data", 0o775)
        if os.path.exists(target_db):
            os.chmod(target_db, 0o664)
        print("‚úÖ Permissions configur√©es")
    except Exception as e:
        print(f"‚ö†Ô∏è Impossible de d√©finir les permissions: {e}")
    
    # Cr√©er un fichier de test pour v√©rifier l'√©criture
    test_file = "/home/render/project/data/test_write.txt"
    try:
        with open(test_file, "w") as f:
            f.write("Test d'√©criture r√©ussi")
        os.remove(test_file)
        print("‚úÖ Test d'√©criture r√©ussi")
    except Exception as e:
        print(f"‚ùå Erreur lors du test d'√©criture: {e}")
    
    print("\n‚úÖ Configuration Render termin√©e!")
    print(f"üìÅ R√©pertoire de donn√©es: /home/render/project/data")
    print(f"üóÑÔ∏è Base de donn√©es: {target_db}")

if __name__ == "__main__":
    # V√©rifier si on est sur Render
    if os.environ.get('RENDER'):
        setup_render_environment()
    else:
        print("‚ÑπÔ∏è Ce script est con√ßu pour √™tre ex√©cut√© sur Render.com")
        print("En environnement local, la configuration n'est pas n√©cessaire.")